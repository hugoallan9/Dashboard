install.packages("devtools")
install.packages("treemap")
install.packages("dplyr")
install.packages("shiny")
install.packages("gridBase")
install.packages("RColorBrewer")
install.packages("plotly")
install.packages("hexbin")
install.packages("hexbin")รง
install.packages("hexbin")
install.packages("plotly")
install.packages("leaflet")
install.packages("flifo")
install.packages("lazyeval")
install.packages("shinydashboard")
install.packages("rgdal")
install.packages("rgdal")
shiny::runApp('/mnt/Datos/GitHub/Dashboard')
install.packages("DT")
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
install.packages("treemap")
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
View(jerarquia_dimension_ida)
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp()
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
View(temporal)
valores_filtros
runApp('/mnt/Datos/GitHub/Dashboard')
valores_filtros[is.null(valores_filtros)]
valores_filtros[!is.null(valores_filtros)]
valores_filtros[!is.null(valores_filtros),]
valores_filtros[!is.null(valores_filtros)]
valores_filtros[!is.null(valores_filtros)]
is.null(valores_filtros)
plyr::compact(valores_filtros)
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
exists(dimension_actual)
exists("dimension_actual")
exists(dimension_actual, where = -2)
exists(dimension_actual, where = 1)
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
View(tabla_dinamica)
tabla_dinamica$Ente
tabla_dinamica$Entidad
as.character(tabla_dinamica$Entidad)
as.factor(as.character(tabla_dinamica$Entidad))
runApp('/mnt/Datos/GitHub/Dashboard')
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
p("The first radio button group controls the second"),
radioButtons("inRadioButtons", "Input radio buttons",
c("Item A", "Item B", "Item C")),
radioButtons("inRadioButtons2", "Input radio buttons 2",
c("Item A", "Item B", "Item C"))
)
server <- function(input, output, session) {
observe({
x <- input$inRadioButtons
# Can also set the label and select items
updateRadioButtons(session, "inRadioButtons2",
label = paste("radioButtons label", x),
choices = x,
selected = x
)
})
}
shinyApp(ui, server)
}
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
