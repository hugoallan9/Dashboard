theme( panel.background = element_rect(fill = "white", colour= "yellow" ),
panel.border = element_rect(fill = "white", linetype = "dashed")  )
grafica
grafica <- grafica +
theme( panel.background = element_rect(fill = "white", colour= "yellow" ),
panel.border = element_rect(fill = NA, linetype = "dashed")  )
grafica
grafica <- grafica +
theme(panel.grid.major =  element_line( colour = "blue") )
grafica
grafica <- grafica +
theme(panel.grid.major =  element_line( colour = "blue"),
panel.grid.major.x = element_line( colour = NA ))
grafica
grafica <- grafica +
theme(panel.grid.major =  element_line( colour = "blue"),
panel.grid.major.y = element_line( colour = NA ))
grafica
grafica <- grafica +
theme(panel.grid.major =  element_line( colour = "blue"),
panel.grid.major.x = element_line( colour = NA ))
grafica
grafica <- grafica +
theme(panel.grid.major =  element_line( colour = "blue"),
panel.grid.major.x = element_line( colour = NA ),
panel.ontop = T)
grafica
grafica <- grafica +
theme(panel.grid.major =  element_line( colour = "blue"),
panel.grid.major.x = element_line( colour = NA ),
panel.ontop = F)
grafica
grafica <- grafica +
theme(axis.line.x = element_line(size = 8, colour = "green"))
grafica
grafica <- grafica +
theme(axis.line.x = element_line(size = 8, colour = "green"),
axis.line.y = element_line(size = 2, colour = "black"))
grafica
grafica <- grafica +
theme( axis.text = element_text( colour = "blue" ) )
grafica
grafica <- grafica +
theme( axis.text = element_text( colour = "blue" ),
axis.ticks = element_line(size = 10))
grafica
grafica <- grafica +
theme( axis.text = element_text( colour = "blue" ),
axis.ticks = element_line(size = 10),
axis.ticks.length = unit(.25, "cm") )
grafica
grafica <- grafica +
theme( axis.text = element_text( colour = "blue" ),
axis.ticks = element_line(size = 1),
axis.ticks.length = unit(.25, "cm") )
grafica
grafica <- grafica +
theme( axis.text = element_text( colour = "blue" ),
axis.ticks = element_line(size = 1),
axis.ticks.length = unit(.5, "cm") )
grafica
grafica <- grafica +
theme(axis.title.y = element_text(angle = 0) )
graficsa
grafica
grafica <- grafica +
theme(axis.title.y = element_text(angle = 0, vjust = 0.5) )
grafica
grafica2 <- ggplot(mtcars, aes(wt, mpg) ) +
geom_point( aes(colour = factor(cyl), shape = factor(vs) ) )
grafica2
install.packages("tikzDevice")
library(tikzDevice)
tikzDevice::tikz(file = "/home/hugo/Documentos/graficaClase.tex", width = 5, height = 4)
grafica2
dev.off()
tikzDevice::tikz(file = "/home/hugo/Documentos/graficaClase.tex", width = 5, height = 4, bareBones = T)
grafica2
dev.off()
tikzDevice::tikz(file = "/home/hugo/Documentos/graficaClase.tex", width = 5, height = 4, bareBones = F)
grafica2
dev.off()
tikzDevice::tikz(file = "/home/hugo/Documentos/graficaClase.tex", width = 5, height = 4, bareBones = T)
grafica2
dev.off()
tikzDevice::tikz(file = "/home/hugo/Documentos/graficaClase.tex", width = 5, height = 4, bareBones = F)
grafica2
dev.off()
shiny::runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
entidad <- read.csv('Sabana_de_prueba_TF.csv', sep =  ';')
entidad <- read.csv('/mnt/Datos/GitHub/GastoAdmoCentral/Sabana_de_prueba_TF.csv', sep =  ';')
devtools::install_github("gluc/data.tree")
devtools::install_github("timelyportfolio/d3treeR")
shiny::runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
install.packages("D3partitionR")
runApp('/mnt/Datos/GitHub/McMenuExplorer')
runApp('/mnt/Datos/GitHub/McMenuExplorer')
shiny::runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
View(temp)
View(app.env)
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
shiny::runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
shiny::runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
# Encovi 2014 -------------------------------------------------------------
encovi_personas <- foreign::read.spss('/home/hugo/Documentos/Encovi_Personas2014.sav', to.data.frame = T)
# Encovi 2014 -------------------------------------------------------------
encovi_personas <- foreign::read.spss('/home/hugo/Documentos/Encovi_Personas2014.sav', to.data.frame = T)
View(encovi_personas)
# Encovi 2014 -------------------------------------------------------------
encovi_personas <- foreign::read.spss('/home/hugo/Documentos/Encovi_Personas2014.sav', to.data.frame = TRUE)
encovi_personas$POBREZA
library(dplyr)
pobres <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
filter(POBREZA == 'Pobre')
pobres <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
filter(POBREZA == 'Pobre no extr.')
View(pobres)
pobres <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
filter(POBREZA == 'Pobre no extr.') %>%
summarise( Cantidad_Pobres = sum(FACTOR) )
View(pobres)
levels(encovi_personas$POBREZA)
pobres_extremos <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
filter(POBREZA == 'Pobre extr.') %>%
summarise( Cantidad_Pobres = sum(FACTOR) )
View(pobres_extremos)
pobres_extremos <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
filter(POBREZA == 'Pobre ext.') %>%
summarise( Cantidad_Pobres = sum(FACTOR) )
View(pobres_extremos)
levels(encovi_personas$POBREZA)
no_pobres <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
filter(POBREZA == 'No Pobre') %>%
summarise( Cantidad_Pobres = sum(FACTOR) )
View(no_pobres)
no_pobres <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
filter(POBREZA == 'No pobre') %>%
summarise( Cantidad_Pobres = sum(FACTOR) )
no_pobres <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
filter(POBREZA == 'No pobre') %>%
summarise( Cantidad_Pobres = sum(FACTOR) )
View(pobres)
View(no_pobres)
pobres_extremos + pobres
pobres_extremos + pobres + no_pobres
total_condiciones_vida <- encovi_personas %>%
select(POBREZA, FACTOR) %>%
group_by(POBREZA) %>%
summarise(Condicion = sum(FACTOR) )
View(total_condiciones_vida)
rm(pobres)
rm(c(pobres_extremos,no_pobres))
rm(pobres_extremos,no_pobres)
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity')
View(grafica)
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity')
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text()
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( ggplot2::label(y)  )
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( label(y)  )
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( label = y  )
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( label = Condicion  )
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, label = Condicion  )
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = Condicion)  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = Condicion / 1000000  )  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2)  )  )
grafica
librr
library(ggplo2)
library(ggplot2)
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2)  )  ) +
theme( axis.text.y = element_text( vjust =  1)  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2)  )  ) +
theme( axis.text.y = element_text( vjust =  -1)  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2)  )  ) +
theme( axis.text.y = element_text( hjust =  -1)  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2)  )  ) +
theme( axis.text.y = element_text( hjust =  -1, vjust = 1.5)  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2)  )  ) +
theme( axis.text.y = element_text( vjust =  -1, hjust = -2)  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2), hjust =  0.5, vjust = -0.5 )  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2), hjust =  0.5, vjust = -0.5, size = 10 )  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity') +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2), hjust =  0.5, vjust = -0.5, size = 5 )  )
grafica
View(total_condiciones_vida)
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity', aes( colour = 'red' ) ) +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2), hjust =  0.5, vjust = -0.5 )  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity', aes( colour = 'red', fill = 'red' ) ) +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2), hjust =  0.5, vjust = -0.5 )  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity',  colour = 'red', fill = 'red'  ) +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2), hjust =  0.5, vjust = -0.5 )  )
grafica
grafica <- ggplot2::ggplot(data =  total_condiciones_vida, ggplot2::aes(x =POBREZA, y = Condicion)) +
geom_bar(stat = 'identity',  colour = 'red', fill = 'red'  ) +
geom_text( data=total_condiciones_vida, ggplot2::aes(label = round(Condicion / 1000000,2), hjust =  0.5, vjust = -0.5 ), size = 3  )
grafica
shiny::runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
runApp('/mnt/Datos/GitHub/GastoAdmoCentral')
shiny::runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
shiny::runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
total_condiciones_vida
levels(total_condiciones_vida$POBREZA)
count(levels(total_condiciones_vida$POBREZA))
count(nlevels(total_condiciones_vida$POBREZA))
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
datos_tabla <- read.csv('datos_tabla.csv', sep = ';')
datos_tabla <- read.csv('/mnt/Datos/GitHub/Dashboard/datos_tabla.csv', sep = ';')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
datos_tabla$Entidad[1]
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
View(temporal)
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
View(temporal)
runApp('/mnt/Datos/GitHub/Dashboard')
View(temporal)
runApp('/mnt/Datos/GitHub/Dashboard')
View(temporal)
runApp('/mnt/Datos/GitHub/Dashboard')
View(temporal)
runApp('/mnt/Datos/GitHub/Dashboard')
View(temporal)
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
dim(datos_tabla)
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
random_binomial <-  rbinom(n,size,p)
source('~/sesion6.R')
random_binomial
barplot(table(V))
barplot(table(random_binomial))
source('~/sesion6.R')
View(table(random_binomial))
class(random_binomial)
as.data.frame(random_binomial)
table(random_binomial)
random_binomial
#Gráfica con ggplot2
g <- ggplot(data = table(random_binomial), x = random_binomial, y = Freq ) +
geom_col( stat = "identity")
library(ggplot2)
g <- ggplot(data = table(random_binomial), x = random_binomial, y = Freq ) +
geom_col( stat = "identity")
#Gráfica con ggplot2
g <- ggplot(data = as.data.frame(table(random_binomial)), x = random_binomial, y = Freq ) +
geom_col( stat = "identity")
as.data.frame(table(random_binomial)
)
#Gráfica con ggplot2
g <- ggplot(data = as.data.frame(table(random_binomial)), x = random_binomial, y = Freq ) +
geom_bar( stat = "identity")
g
#Gráfica con ggplot2
g <- ggplot(data = as.data.frame(table(random_binomial)), aes(x = random_binomial, y = Freq )) +
geom_bar( stat = "identity")
g
#Calculo de la media de una binomial
mean(random_binomial)
#Esperanza matemática de ;la muestra
n * p
#Esperanza matemática de ;la muestra
size * p
dbinom(0:7,7,0.3)
0:7
shiny::runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
View(tabla_dinamica)
runApp('/mnt/Datos/GitHub/Dashboard')
tabla_dinamica
runApp('/mnt/Datos/GitHub/Dashboard')
tabla_dinamica
View(tabla_dinamica)
tabla_nueva <- tabla_dinamica %>% filter(Finalidad == "MINISTERIO DE DESARROLLO SOCIAL")
tabla_nueva
tabla_dinamica$Entidad
datos_tabla$Grupo[-1]
list(1:3)
list(1:3)[-1]
list(1:3)[1]
list(1:3)[[-1]]
tail(list(1:3))
list(1:3)[[1]]
c(list(1:2),list(2:4))
c(list(1:2),"f")
c(list(1:2),"f")[2]
c(list(1:2),"f")[c(1,2)]
split(c(list(1:2),"f")[c(1,2)])
split(c(list(1:2),"f")[c(1,2)],c(1,2))
split(c(list(1:2),"f")[,1]
)
c(list(1:2),"f")[,1]
shiny::runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
Q
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
3:2
for(x in  3:2) print(x)
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
list(1:3)
list(1:3,2:4)
list(1:3,2:4)[c(1,2)]
list(1:3,2:4)[c(1)]
a <- list(1:3,2:4)[c(1)]
a
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
tabla_temporal
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
runApp('/mnt/Datos/GitHub/Dashboard')
tabla_temporal
resultado
tabla_dinamica %>% filter("Programa" == "ACTIVIDADES CENTRALES")
tabla_dinamica %>% filter(Programa == "ACTIVIDADES CENTRALES")
runApp('/mnt/Datos/GitHub/Dashboard')
View(temporal)
